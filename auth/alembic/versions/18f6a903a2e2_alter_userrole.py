"""alter_userrole

Revision ID: 18f6a903a2e2
Revises: 1de719570c73
Create Date: 2024-12-02 19:15:17.964635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '18f6a903a2e2'
down_revision: Union[str, None] = '1de719570c73'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('userrole', sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False))
    op.add_column('userrole', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('userrole', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('userrole_pkey', 'userrole')
    op.create_primary_key('userrole_pkey', 'userrole', ['user_id', 'role_id', 'id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('userrole_pkey', 'userrole')
    op.drop_column('userrole', 'updated_at')
    op.drop_column('userrole', 'created_at')
    op.drop_column('userrole', 'id')
    op.create_primary_key('userrole_pkey', 'userrole', ['user_id', 'role_id'])
    # ### end Alembic commands ###
