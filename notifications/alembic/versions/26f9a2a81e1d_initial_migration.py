"""initial_migration

Revision ID: 26f9a2a81e1d
Revises: 
Create Date: 2024-12-18 23:22:41.912135

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '26f9a2a81e1d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deliverymethods',
    sa.Column('method', postgresql.ENUM('EMAIL', 'SMS', name='delivery_method'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('method')
    )
    op.create_table('eventtypes',
    sa.Column('type', postgresql.ENUM('USER_REGISTERED', 'USER_LOGGED_IN', 'SUBSCRIPTION_PAID', 'SUBSCRIPTION_CANCELED', 'SUBSCRIPTION_REFUNDED', name='event_type'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('processednotifications',
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processednotifications_notification_id'), 'processednotifications', ['notification_id'], unique=False)
    op.create_table('templates',
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=32), nullable=False),
    sa.Column('template', sa.Text(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template')
    )
    op.create_table('notificationtemplates',
    sa.Column('event_type_id', sa.Uuid(), nullable=False),
    sa.Column('delivery_method_id', sa.Uuid(), nullable=False),
    sa.Column('template_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['delivery_method_id'], ['deliverymethods.id'], ),
    sa.ForeignKeyConstraint(['event_type_id'], ['eventtypes.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_type_id', 'delivery_method_id', name='uq_event_delivery_method')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notificationtemplates')
    op.drop_table('templates')
    op.drop_index(op.f('ix_processednotifications_notification_id'), table_name='processednotifications')
    op.drop_table('processednotifications')
    op.drop_table('eventtypes')
    op.drop_table('deliverymethods')

    op.execute('DROP TYPE delivery_method')
    op.execute('DROP TYPE event_type')
    # ### end Alembic commands ###
